{"version":3,"sources":["components/Stats/Stats.module.css","components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Stats/Stats.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Stats","props","stats","followers","views","likes","className","s","container","item","label","quantity","toLocaleString","Profile","name","tag","location","avatar","profile","src","alt","Statistics","title","list","map","stat","listItem","style","backgroundColor","Math","floor","random","percentage","id","FriendListItem","isOnline","online","offline","width","FriendList","friends","friend","TransactionHistory","items","transactions","type","amount","currency","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99c6dce8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Stats_container__3PDX6\",\"item\":\"Stats_item__1yVBU\",\"label\":\"Stats_label__3z7SB\",\"quantity\":\"Stats_quantity__2NogG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__202_-\",\"profile\":\"Profile_profile__2uHeE\",\"avatar\":\"Profile_avatar__3R62k\",\"row\":\"Profile_row__25O6U\",\"lightText\":\"Profile_lightText__33J1Y\",\"name\":\"Profile_name__MiQ1a Profile_row__25O6U\",\"tag\":\"Profile_tag__b3mTT Profile_row__25O6U Profile_lightText__33J1Y\",\"location\":\"Profile_location__2Hm5S Profile_lightText__33J1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__2qC0R\",\"title\":\"Statistics_title__JtwQh\",\"list\":\"Statistics_list__2TSkF\",\"listItem\":\"Statistics_listItem__18GMG\",\"label\":\"Statistics_label__37upY\",\"percentage\":\"Statistics_percentage__39OpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3D9Vy\",\"status\":\"FriendListItem_status__3sO6Z\",\"offline\":\"FriendListItem_offline__1RSWJ FriendListItem_status__3sO6Z\",\"online\":\"FriendListItem_online__3KFnp FriendListItem_status__3sO6Z\",\"avatar\":\"FriendListItem_avatar__Pxa8Y\",\"name\":\"FriendListItem_name__aOqgx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendList_container__3j8wG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactions\":\"TransactionHistory_transactions__2HmL0\"};","import PropTypes from 'prop-types';\nimport s from './Stats.module.css';\n\nfunction Stats(props) {\n  const { followers = 0, views = 0, likes = 0 } = props.stats;\n  return (\n    <ul className={s.container}>\n      <li className={s.item}>\n        <span className={s.label}>Followers</span>\n        <span className={s.quantity}>{followers.toLocaleString()}</span>\n      </li>\n      <li className={s.item}>\n        <span className={s.label}>Views</span>\n        <span className={s.quantity}>{views.toLocaleString()}</span>\n      </li>\n      <li className={s.item}>\n        <span className={s.label}>Likes</span>\n        <span className={s.quantity}>{likes.toLocaleString()}</span>\n      </li>\n    </ul>\n  );\n}\n\nStats.propTypes = {\n  followers: PropTypes.number,\n  views: PropTypes.number,\n  likes: PropTypes.number,\n};\n\nexport default Stats;\n","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\nimport Stats from '../Stats/Stats';\n\nconst Profile = function ({\n  name,\n  tag,\n  location,\n  avatar = 'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg',\n  stats,\n}) {\n  return (\n    <div className={s.container}>\n      <div className={s.profile}>\n        <img\n          src={avatar}\n          alt={`Аватар пользователя ${name}`}\n          className={s.avatar}\n        />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n      <Stats stats={stats} />\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <ul className={s.list}>\n        {stats.map(stat => (\n          <li\n            className={s.listItem}\n            key={stat.id}\n            style={{ backgroundColor: getRandomRGBColor() }}\n          >\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nfunction getRandomRGBColor() {\n  //to prevent color be too light\n  return `rgb(${Math.floor(Math.random() * 235)}, ${Math.floor(\n    Math.random() * 235,\n  )}, ${Math.floor(Math.random() * 235)})`;\n}\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\n\nfunction FriendListItem({\n  id,\n  avatar = 'https://www.flaticon.com/svg/static/icons/svg/1077/1077012.svg',\n  name,\n  isOnline = false,\n}) {\n  return (\n    <li className={s.item}>\n      <span className={isOnline ? s.online : s.offline}></span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\nimport s from './FriendList.module.css';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={s.container}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={s.transactions}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","// import logo from './logo.svg';\nimport './App.css';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <div>\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\n      </div>\n      <div>\n        <Statistics stats={statisticalData} />\n      </div>\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}